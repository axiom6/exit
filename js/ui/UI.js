// Generated by CoffeeScript 1.9.1
(function() {
  var UI,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  UI = (function() {
    Util.Export(UI, 'ui/UI');

    function UI(stream, destinationUI, goUI, nogoUI, tripUI, dealsUI, navigateUI) {
      this.stream = stream;
      this.destinationUI = destinationUI;
      this.goUI = goUI;
      this.nogoUI = nogoUI;
      this.tripUI = tripUI;
      this.dealsUI = dealsUI;
      this.navigateUI = navigateUI;
      this.select = bind(this.select, this);
      this.orientation = 'Portrait';
      this.recommendation = 'Go';
      this.firstTrip = true;
    }

    UI.prototype.ready = function() {
      this.$ = $(this.html());
      $('#App').append(this.$);
      this.$view = this.$.find('#View');
      this.$view.append(this.destinationUI.$);
      this.$view.append(this.goUI.$);
      this.$view.append(this.nogoUI.$);
      this.$view.append(this.tripUI.$);
      this.$view.append(this.dealsUI.$);
      this.$view.append(this.navigateUI.$);
      this.$IconsHover = this.$.find('#IconsHover');
      this.$Icons = this.$.find('#Icons');
      this.$destinationIcon = this.$.find('#DestinationIcon');
      this.$recommendationIcon = this.$.find('#RecommendationIcon');
      this.$recommendationFA = this.$.find('#RecommendationFA');
      this.$tripIcon = this.$.find('#TripIcon');
      this.$dealsIcon = this.$.find('#DealsIcon');
      this.$namigateIcon = this.$.find('#NavigateIcon');
      this.$IconsHover.mouseenter((function(_this) {
        return function() {
          return _this.$Icons.show();
        };
      })(this));
      this.$Icons.mouseleave((function(_this) {
        return function() {
          return _this.$Icons.hide();
        };
      })(this));
      this.events();
      this.subscribe();
      return this.stream.publish('Select', 'Destination');
    };

    UI.prototype.position = function(screen) {
      return this.onScreen(screen);
    };

    UI.prototype.events = function() {
      this.stream.event('Select', this.$destinationIcon, 'click', 'Destination');
      this.stream.event('Select', this.$recommendationIcon, 'click', this.recommendation);
      this.stream.event('Select', this.$tripIcon, 'click', 'Trip');
      return this.stream.event('Select', this.$dealsIcon, 'click', 'Deals');
    };

    UI.prototype.subscribe = function() {
      this.stream.subscribe('Select', (function(_this) {
        return function(page) {
          return _this.select(page);
        };
      })(this));
      this.stream.subscribe('Screen', (function(_this) {
        return function(screen) {
          return _this.onScreen(screen);
        };
      })(this));
      return this.stream.subscribe('Trip', (function(_this) {
        return function(trip) {
          return _this.onTrip(trip);
        };
      })(this));
    };

    UI.prototype.id = function(name, type) {
      return Util.id(name, type);
    };

    UI.prototype.css = function(name, type) {
      return Util.css(name, type);
    };

    UI.prototype.icon = function(name, type, fa) {
      return Util.icon(name, type, fa);
    };

    UI.prototype.html = function() {
      return "<div      id=\"" + (this.id('UI')) + "\"                     class=\"" + (this.css('UI')) + "\">\n <div    id=\"" + (this.id('IconsHover')) + "\"             class=\"" + (this.css('IconsHover')) + "\"></div>\n <div    id=\"" + (this.id('Icons')) + "\"                  class=\"" + (this.css('Icons')) + "\">\n    <div>\n      <div id=\"" + (this.id('Destination', 'Icon')) + "\"  class=\"" + (this.css('Destination', 'Icon')) + "\"><i class=\"fa fa-picture-o\"></i><div>Destination</div></div>\n      <div id=\"" + (this.id('Recommendation', 'Icon')) + "\"  class=\"" + (this.css('Recommendation', 'Icon')) + "\"><i class=\"fa fa-thumbs-up\" id=\"RecommendationFA\"></i><div>Recommendation</div></div>\n      <div id=\"" + (this.id('Trip', 'Icon')) + "\"  class=\"" + (this.css('Trip', 'Icon')) + "\"><i class=\"fa fa-road\"></i><div>Trip</div></div>\n      <div id=\"" + (this.id('Deals', 'Icon')) + "\"  class=\"" + (this.css('Deals', 'Icon')) + "\"><i class=\"fa fa-trophy\"></i><div>Deals</div></div>\n    </div>\n </div>\n <div id=\"" + (this.id('View')) + "\" class=\"" + (this.css('View')) + "\"></div>\n</div>";
    };

    UI.prototype.onTrip = function(trip) {
      if (this.recommendation !== trip.recommendation) {
        this.changeRecommendation(trip.recommendation);
        this.recommendation = trip.recommendation;
      } else if (this.firstTrip) {
        this.select(this.recommendation);
        this.firstTrip = false;
      }
    };

    UI.prototype.changeRecommendation = function(recommendation) {
      var faClass;
      Util.noop('UI.changeRecommendation', recommendation);
      this.select(recommendation);
      faClass = recommendation === 'Go' ? 'fa fa-thumbs-up' : 'fa fa-thumbs-down';
      this.$recommendationFA.attr('class', faClass);
    };

    UI.prototype.onScreen = function(screen) {
      var url;
      Util.dbg('UI.onScreen()', screen);
      if (this.orientation !== screen.orientation) {
        this.orientation = screen.orientation;
        url = "css/img/app/phone6x12" + screen.orientation + ".png";
        $('body').css({
          "background-image": "url(" + url + ")"
        });
        return $('#App').attr('class', "App" + screen.orientation);
      }
    };

    UI.prototype.show = function() {};

    UI.prototype.hide = function() {};

    UI.prototype.select = function(page) {
      if (this.lastSelect != null) {
        this.lastSelect.hide();
      }
      switch (page) {
        case 'Destination':
          this.lastSelect = this.destinationUI;
          break;
        case 'Go':
        case 'NoGo':
          this.lastSelect = page === 'Go' ? this.goUI : this.nogoUI;
          break;
        case 'Trip':
          this.lastSelect = this.tripUI;
          this.onScreen(this.toScreen('Landscape'));
          this.tripUI.onScreen(this.toScreen('Landscape'));
          break;
        case 'Deals':
          this.lastSelect = this.dealsUI;
          break;
        default:
          Util.error("UI.select unknown page", page);
      }
      if (page !== 'Trip') {
        this.onScreen(this.toScreen('Portrait'));
      }
      this.lastSelect.show();
    };

    UI.prototype.width = function() {
      return this.$.width();
    };

    UI.prototype.height = function() {
      return this.$.height();
    };

    UI.prototype.toScreen = function(orientation) {
      if (orientation === this.orientation) {
        return {
          orientation: orientation,
          width: this.width(),
          height: this.height()
        };
      } else {
        return {
          orientation: orientation,
          width: this.height(),
          height: this.width()
        };
      }
    };

    return UI;

  })();

}).call(this);
