// Generated by CoffeeScript 1.9.1
(function() {
  var Spatial;

  Spatial = (function() {
    Util.Export(Spatial, 'app/Spatial');

    function Spatial(app, stream, trip) {
      this.app = app;
      this.stream = stream;
      this.trip = trip;
      this.Data = Util.Import('app/Data');
    }

    Spatial.prototype.direction = function(source, destination) {
      if (this.Data.DestinationsMile[source] >= this.Data.DestinationsMile[destination]) {
        return 'West';
      } else {
        return 'East';
      }
    };

    Spatial.prototype.segInTrip = function(seg) {
      var begMileSeg, endMileSeg;
      begMileSeg = Util.toFloat(seg.StartMileMarker);
      endMileSeg = Util.toFloat(seg.EndMileMarker);
      switch (this.trip.direction) {
        case 'East':
        case 'North':
          return this.trip.begMile() <= begMileSeg && endMileSeg <= this.trip.endMile();
        case 'West' || 'South':
          return this.trip.begMile() >= begMileSeg && endMileSeg >= this.trip.endMile();
      }
    };

    Spatial.prototype.segIdNum = function(key) {
      var id, len, num;
      id = "";
      num = 0;
      len = key.length;
      if (len >= 2 && 'id' === key.substring(0, 2)) {
        id = key;
        num = Util.toInt(key.substring(2, key.length));
      } else {
        Util.error('Spatial.segIdNum() unable to parse key for Segment number', key);
      }
      return [id, num];
    };

    return Spatial;

  })();

}).call(this);
