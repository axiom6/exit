// Generated by CoffeeScript 1.9.1
(function() {
  var Trip,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Trip = (function() {
    var Data;

    Util.Export(Trip, 'ui/Trip');

    Data = Util.Import('app/Data');

    function Trip(app, stream, road, weather, advisory) {
      this.app = app;
      this.stream = stream;
      this.road = road;
      this.weather = weather;
      this.advisory = advisory;
      this.doConditions = bind(this.doConditions, this);
      this.doSegments = bind(this.doSegments, this);
      this.driveBarsCreated = false;
      this.segments = [];
      this.conditions = [];
    }

    Trip.prototype.ready = function() {
      this.advisory.ready();
      this.road.ready();
      this.weather.ready();
      this.$ = $(this.html());
      this.$.append(this.advisory.$);
      this.$.append(this.weather.$);
      return this.$.append(this.road.$);
    };

    Trip.prototype.html = function() {
      return "<div id=\"" + (this.app.id('Trip')) + "\" class=\"" + (this.app.css('Trip')) + "\"></div>";
    };

    Trip.prototype.postReady = function() {
      return this.road.postReady();
    };

    Trip.prototype.layout = function() {};

    Trip.prototype.show = function() {
      return this.$.show();
    };

    Trip.prototype.hide = function() {
      return this.$.hide();
    };

    Trip.prototype.doSegments = function(args, obj) {
      var i, id, len, num, ref, ref1, segment;
      this.segments = obj.segments;
      Util.log('logSegments args', args);
      Util.log('logSegments segs', segments.length);
      ref = this.segments;
      for (i = 0, len = ref.length; i < len; i++) {
        segment = ref[i];
        ref1 = this.segIdNum(segment), id = ref1[0], num = ref1[1];
        Util.log('logSegment', {
          id: id,
          num: num,
          name: segment.name
        });
      }
      this.app.segmentsComplete = true;
      return this.app.checkComplete();
    };

    Trip.prototype.condSegs = function() {
      return [31, 32, 33, 34, 272, 273, 36, 37, 39, 40, 41, 276, 277, 268, 269, 44, 45];
    };

    Trip.prototype.doConditions = function(args, conditions) {
      var c, cc, i, len;
      this.conditions = conditions;
      this.conditions.segments = args.segments;
      Util.log('logConditions args', args);
      Util.log('logConditions conds', conditions.length);
      for (i = 0, len = conditions.length; i < len; i++) {
        c = conditions[i];
        cc = c.Conditions;
        Util.log('  condition', {
          SegmentId: c.SegmentId,
          TravelTime: cc.TravelTime,
          AverageSpeed: cc.AverageSpeed
        });
        Util.log('  weather', cc.Weather);
      }
      this.app.conditionsComplete = true;
      if (this.driveBarsCreated) {
        return this.updateDriveBars(conditions.Conditions);
      } else {
        return this.app.checkComplete();
      }
    };

    Trip.createDriveBars = function() {
      this.app.go.driveBar.create(this.segments, this.conditions, Trip.Data);
      this.app.nogo.driveBar.create(this.segments, this.conditions, Trip.Data);
      this.app.trip.driveBar.create(this.segments, this.conditions, Trip.Data);
      return this.driveBarsCreated = true;
    };

    Trip.updateDriveBars = function(conditions) {
      this.app.go.driveBar.update(this.segments, conditions, Trip.Data);
      this.app.nogo.driveBar.update(this.segments, conditions, Trip.Data);
      return this.app.trip.driveBar.update(this.segments, conditions, Trip.Data);
    };

    return Trip;

  })();

}).call(this);
