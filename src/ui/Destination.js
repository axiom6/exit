// Generated by CoffeeScript 1.9.1
(function() {
  var Destination;

  Destination = (function() {
    Util.Export(Destination, 'ui/Destination');

    function Destination(app, stream, threshold) {
      this.app = app;
      this.stream = stream;
      this.threshold = threshold;
      this.Data = Util.Import('app/Data');
      this.sources = this.Data.Destinations;
      this.destinations = this.Data.Destinations;
    }

    Destination.prototype.ready = function() {
      this.threshold.ready();
      this.$ = $(this.html());
      this.$.append(this.threshold.$);
      this.$destinationBody = this.$.find('#DestinationBody');
      this.$sourceSelect = this.$.find('#SourceSelect');
      return this.$destinationSelect = this.$.find('#DestinationSelect');
    };

    Destination.prototype.position = function() {
      this.threshold.position();
      this.publish();
      return this.subscribe();
    };

    Destination.prototype.publish = function() {
      this.stream.publish('Source', this.$sourceSelect, 'change', 'Source', 'Source');
      return this.stream.publish('Destination', this.$destinationSelect, 'change', 'Destination', 'Destination');
    };

    Destination.prototype.subscribe = function() {
      this.stream.subscribe('Source', (function(_this) {
        return function(object) {
          return _this.onSource(object.content);
        };
      })(this));
      this.stream.subscribe('Destination', (function(_this) {
        return function(object) {
          return _this.onDestination(object.content);
        };
      })(this));
      return this.stream.subscribe('Orient', (function(_this) {
        return function(object) {
          return _this.layout(object.content);
        };
      })(this));
    };

    Destination.prototype.onSource = function(source) {
      return Util.dbg('Destination.onSource()', source);
    };

    Destination.prototype.onDestination = function(dest) {
      return Util.dbg('Destination.onDestination()', dest);
    };

    Destination.prototype.id = function(name, type) {
      return this.app.id(name, type);
    };

    Destination.prototype.css = function(name, type) {
      return this.app.css(name, type);
    };

    Destination.prototype.icon = function(name, type, fa) {
      return this.app.icon(name, type, fa);
    };

    Destination.prototype.html = function() {
      var destination, htm, i, j, len, len1, ref, ref1, source;
      htm = "<div      id=\"" + (this.id('Destination')) + "\"             class=\"" + (this.css('Destination')) + "\">\n<div      id=\"" + (this.id('DestinationBody')) + "\"         class=\"" + (this.css('DestinationBody')) + "\">\n <!--div  id=\"" + (this.id('DestinationLabelInput')) + "\" class=\"" + (this.css('DestinationLabelInput')) + "\">\n   <span  id=\"" + (this.id('DestinationUserLabel')) + "\" class=\"" + (this.css('DestinationUserLabel')) + "\">User:</span>\n   <input id=\"" + (this.id('DestinationUserInput')) + "\" class=\"" + (this.css('DestinationUserInput')) + "\"type=\"text\" name=\"theinput\" />\n </div-->\n <div     id=\"" + (this.id('SourceWhat')) + "\"            class=\"" + (this.css('SourceWhat')) + "\">Where are You Now?</div>\n <select  id=\"" + (this.id('SourceSelect')) + "\"          class=\"" + (this.css('SourceSelect')) + "\"name=\"Sources\">";
      ref = this.sources;
      for (i = 0, len = ref.length; i < len; i++) {
        source = ref[i];
        htm += "<option>" + source + "</option>";
      }
      htm += "</select></div>\n<div     id=\"" + (this.id('DestinationWhat')) + "\"       class=\"" + (this.css('DestinationWhat')) + "\">What is your</div>\n<div     id=\"" + (this.id('DestinationDest')) + "\"       class=\"" + (this.css('DestinationDest')) + "\">Destination?</div>\n<select  id=\"" + (this.id('DestinationSelect')) + "\"     class=\"" + (this.css('DestinationSelect')) + "\"name=\"Desinations\">";
      ref1 = this.destinations;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        destination = ref1[j];
        htm += "<option>" + destination + "</option>";
      }
      htm += "</select></div></div>";
      return htm;
    };

    Destination.prototype.layout = function(orientation) {
      return Util.dbg('Destination.layout()', orientation);
    };

    Destination.prototype.show = function() {
      return this.$.show();
    };

    Destination.prototype.hide = function() {
      return this.$.hide();
    };

    Destination.prototype.showBody = function() {
      return this.$destinationBody.show();
    };

    Destination.prototype.hideBody = function() {
      return this.$destinationBody.hide();
    };

    return Destination;

  })();

}).call(this);
