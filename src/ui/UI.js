// Generated by CoffeeScript 1.9.1
(function() {
  var UI;

  UI = (function() {
    Util.Export(UI, 'ui/UI');

    function UI(app, stream, destination, trip, deals, navigate) {
      this.app = app;
      this.stream = stream;
      this.destination = destination;
      this.trip = trip;
      this.deals = deals;
      this.navigate = navigate;
    }

    UI.prototype.ready = function() {
      this.$ = $(this.html());
      $('#App').append(this.$);
      this.$view = this.$.find('#View');
      this.$view.append(this.destination.$);
      this.$view.append(this.trip.$);
      this.$view.append(this.deals.$);
      this.$view.append(this.navigate.$);
      this.$destinationIcon = this.$.find('#DestinationIcon');
      this.$tripIcon = this.$.find('#TripIcon');
      this.$dealsIcon = this.$.find('#DealsIcon');
      this.$namigateIcon = this.$.find('#NavigateIcon');
      this.lastSelect = null;
      this.orientation = 'Portrait';
      this.publish();
      this.subscribe();
      return this.select('Destination');
    };

    UI.prototype.id = function(name, type) {
      return this.app.id(name, type);
    };

    UI.prototype.css = function(name, type) {
      return this.app.css(name, type);
    };

    UI.prototype.icon = function(name, type, fa) {
      return this.app.icon(name, type, fa);
    };

    UI.prototype.html = function() {
      return "<div    id=\"" + (this.id('UI')) + "\"                  class=\"" + (this.css('UI')) + "\">\n <div  id=\"" + (this.id('Icons')) + "\"               class=\"" + (this.css('Icons')) + "\">\n    <i id=\"" + (this.id('Destination', 'Icon')) + "\"  class=\"" + (this.icon('Destination', 'Icon', 'picture-o')) + "\"></i>\n    <i id=\"" + (this.id('Trip', 'Icon')) + "\"  class=\"" + (this.icon('Trip', 'Icon', 'road')) + "\"></i>\n    <i id=\"" + (this.id('Deals', 'Icon')) + "\"  class=\"" + (this.icon('Deals', 'Icon', 'trophy')) + "\"></i>\n    <i id=\"" + (this.id('Navigate', 'Icon')) + "\"  class=\"" + (this.icon('Navigate', 'Icon', 'street-view')) + "\"></i>\n </div>\n <div id=\"" + (this.id('View')) + "\" class=\"" + (this.css('View')) + "\"></div>\n</div>";
    };

    UI.prototype.layout = function(orientation) {
      var url;
      Util.log('UI.layout', orientation);
      url = "img/app/phone6x12" + orientation + ".png";
      $('body').css({
        "background-image": "url(" + url + ")"
      });
      return $('#App').attr('class', "App" + orientation);
    };

    UI.prototype.show = function() {};

    UI.prototype.hide = function() {};

    UI.prototype.publish = function() {
      this.stream.publish('Select', this.$destinationIcon, 'click', 'Destination', 'UI');
      this.stream.publish('Select', this.$tripIcon, 'click', 'Trip', 'UI');
      this.stream.publish('Select', this.$dealsIcon, 'click', 'Deals', 'UI');
      return this.stream.publish('Orient', this.$namigateIcon, 'click', 'Orient', 'UI');
    };

    UI.prototype.subscribe = function() {
      this.stream.subscribe('Select', (function(_this) {
        return function(object) {
          return _this.select(object.topic);
        };
      })(this));
      return this.stream.subscribe('Orient', (function(_this) {
        return function(object) {
          return _this.orient();
        };
      })(this));
    };

    UI.prototype.push = function(subject, topic, from) {
      return this.stream.push(subject, topic, from);
    };

    UI.prototype.select = function(name) {
      if (this.lastSelect != null) {
        this.lastSelect.hide();
      }
      switch (name) {
        case 'Destination':
          this.lastSelect = this.destination;
          break;
        case 'Trip':
          this.lastSelect = this.trip;
          break;
        case 'Deals':
          this.lastSelect = this.deals;
          break;
        case 'Navigate':
          this.lastSelect = this.navigate;
          break;
        default:
          Util.error("UI.select unknown name", name);
      }
      if (this.lastSelect != null) {
        this.lastSelect.show();
        Util.log(name, 'Selected');
      }
    };

    UI.prototype.orient = function() {
      this.orientation = this.orientation === 'Portrait' ? 'Landscape' : 'Portrait';
      return this.layout(this.orientation);
    };

    return UI;

  })();

}).call(this);
