// Generated by CoffeeScript 1.9.1
(function() {
  var UI;

  UI = (function() {
    Util.Export(UI, 'ui/UI');

    function UI(app, stream, destination, trip, deals, navigate) {
      this.app = app;
      this.stream = stream;
      this.destination = destination;
      this.trip = trip;
      this.deals = deals;
      this.navigate = navigate;
      this.orientation = 'Portrait';
      this.lastSelect = null;
    }

    UI.prototype.ready = function() {
      this.$ = $(this.html());
      $('#App').append(this.$);
      this.$view = this.$.find('#View');
      this.$view.append(this.destination.$);
      this.$view.append(this.trip.$);
      this.$view.append(this.deals.$);
      this.$view.append(this.navigate.$);
      this.$IconsHover = this.$.find('#IconsHover');
      this.$Icons = this.$.find('#Icons');
      this.$destinationIcon = this.$.find('#DestinationIcon');
      this.$tripIcon = this.$.find('#TripIcon');
      this.$dealsIcon = this.$.find('#DealsIcon');
      this.$namigateIcon = this.$.find('#NavigateIcon');
      this.$IconsHover.mouseenter((function(_this) {
        return function() {
          return _this.$Icons.show();
        };
      })(this));
      this.$Icons.mouseleave((function(_this) {
        return function() {
          return _this.$Icons.hide();
        };
      })(this));
      this.publish();
      this.subscribe();
      return this.stream.push('Select', 'Destination', 'UI');
    };

    UI.prototype.publish = function() {
      this.stream.publish('Select', this.$destinationIcon, 'click', 'Destination', 'UI');
      this.stream.publish('Select', this.$tripIcon, 'click', 'Trip', 'UI');
      this.stream.publish('Select', this.$dealsIcon, 'click', 'Deals', 'UI');
      return this.stream.publish('Select', this.$namigateIcon, 'click', 'Navigate', 'UI');
    };

    UI.prototype.subscribe = function() {
      this.stream.subscribe('Select', (function(_this) {
        return function(object) {
          return _this.select(object.content);
        };
      })(this));
      return this.stream.subscribe('Orient', (function(_this) {
        return function(object) {
          return _this.layout(object.content);
        };
      })(this));
    };

    UI.prototype.id = function(name, type) {
      return this.app.id(name, type);
    };

    UI.prototype.css = function(name, type) {
      return this.app.css(name, type);
    };

    UI.prototype.icon = function(name, type, fa) {
      return this.app.icon(name, type, fa);
    };

    UI.prototype.html = function() {
      return "<div      id=\"" + (this.id('UI')) + "\"                  class=\"" + (this.css('UI')) + "\">\n <div    id=\"" + (this.id('IconsHover')) + "\"          class=\"" + (this.css('IconsHover')) + "\"></div>\n <div    id=\"" + (this.id('Icons')) + "\"               class=\"" + (this.css('Icons')) + "\">\n    <div id=\"" + (this.id('Destination', 'Icon')) + "\"  class=\"" + (this.css('Destination', 'Icon')) + "\"><div><i class=\"fa fa-picture-o\"></i></div></div>\n    <div id=\"" + (this.id('Trip', 'Icon')) + "\"  class=\"" + (this.css('Trip', 'Icon')) + "\"><div><i class=\"fa fa-road\"></i></div></div>\n    <div id=\"" + (this.id('Deals', 'Icon')) + "\"  class=\"" + (this.css('Deals', 'Icon')) + "\"><div><i class=\"fa fa-trophy\"></i></div></div>\n    <div id=\"" + (this.id('Navigate', 'Icon')) + "\"  class=\"" + (this.css('Navigate', 'Icon')) + "\"><div><i class=\"fa fa-street-view\"></i></div></div>\n </div>\n <div id=\"" + (this.id('View')) + "\" class=\"" + (this.css('View')) + "\"></div>\n</div>";
    };

    UI.prototype.orient = function(orientation) {
      if (orientation != null) {
        this.orientation = orientation;
      } else {
        this.orientation = this.orientation === 'Portrait' ? 'Landscape' : 'Portrait';
      }
      Util.log('UI.orient() new', this.orientation);
    };

    UI.prototype.layout = function(orientation) {
      var url;
      Util.log('UI.layout', orientation);
      url = "img/app/phone6x12" + orientation + ".png";
      $('body').css({
        "background-image": "url(" + url + ")"
      });
      return $('#App').attr('class', "App" + orientation);
    };

    UI.prototype.show = function() {};

    UI.prototype.hide = function() {};

    UI.prototype.select = function(name) {
      if (this.lastSelect != null) {
        this.lastSelect.hide();
      }
      switch (name) {
        case 'Destination':
          this.lastSelect = this.destination;
          break;
        case 'Trip':
          this.lastSelect = this.trip;
          this.orient('Landscape');
          this.layout('Landscape');
          this.trip.layout('Landscape');
          if (this.app.simulate != null) {
            this.app.simulate.generateLocationsFromMilePosts(1000);
          }
          break;
        case 'Deals':
          this.lastSelect = this.deals;
          break;
        case 'Navigate':
          break;
        default:
          Util.error("UI.select unknown name", name);
      }
      if (this.lastSelect != null) {
        this.lastSelect.show();
        if (this.orientation === 'Landscape' && name !== 'Trip') {
          return this.layout('Portrait');
        }
      }
    };

    UI.prototype.width = function() {
      var w, w1;
      w1 = this.$ != null ? this.$.width() : 0;
      w = 0;
      if (w1 === 0) {
        w = this.orientation === 'Portrait' ? 300 : 500;
      } else {
        w = w1;
      }
      return w;
    };

    UI.prototype.height = function() {
      var h, h1;
      h1 = this.$ != null ? this.$.height() : 0;
      h = 0;
      if (h1 === 0) {
        h = this.orientation === 'Portrait' ? 500 : 300;
      } else {
        h = h1;
      }
      return h;
    };

    return UI;

  })();

}).call(this);
